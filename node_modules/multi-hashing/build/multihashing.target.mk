# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := multihashing
DEFS_Debug := \
	'-DNODE_GYP_MODULE_NAME=multihashing' \
	'-DUSING_UV_SHARED=1' \
	'-DUSING_V8_SHARED=1' \
	'-DV8_DEPRECATION_WARNINGS=1' \
	'-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64' \
	'-DBUILDING_NODE_EXTENSION' \
	'-DDEBUG' \
	'-D_DEBUG' \
	'-DV8_ENABLE_CHECKS'

# Flags passed to all source files.
CFLAGS_Debug := \
	-fPIC \
	-pthread \
	-Wall \
	-Wextra \
	-Wno-unused-parameter \
	-m64 \
	-g \
	-O0

# Flags passed to only C files.
CFLAGS_C_Debug :=

# Flags passed to only C++ files.
CFLAGS_CC_Debug := \
	-fno-rtti \
	-fno-exceptions \
	-std=gnu++0x \
	-std=c++0x

INCS_Debug := \
	-I/root/.node-gyp/8.11.4/include/node \
	-I/root/.node-gyp/8.11.4/src \
	-I/root/.node-gyp/8.11.4/deps/uv/include \
	-I/root/.node-gyp/8.11.4/deps/v8/include \
	-I/usr/include/python2.7 \
	-I$(srcdir)/crypto \
	-I$(srcdir)/sha3 \
	-I$(srcdir)/../nan

DEFS_Release := \
	'-DNODE_GYP_MODULE_NAME=multihashing' \
	'-DUSING_UV_SHARED=1' \
	'-DUSING_V8_SHARED=1' \
	'-DV8_DEPRECATION_WARNINGS=1' \
	'-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64' \
	'-DBUILDING_NODE_EXTENSION'

# Flags passed to all source files.
CFLAGS_Release := \
	-fPIC \
	-pthread \
	-Wall \
	-Wextra \
	-Wno-unused-parameter \
	-m64 \
	-O3 \
	-fno-omit-frame-pointer

# Flags passed to only C files.
CFLAGS_C_Release :=

# Flags passed to only C++ files.
CFLAGS_CC_Release := \
	-fno-rtti \
	-fno-exceptions \
	-std=gnu++0x \
	-std=c++0x

INCS_Release := \
	-I/root/.node-gyp/8.11.4/include/node \
	-I/root/.node-gyp/8.11.4/src \
	-I/root/.node-gyp/8.11.4/deps/uv/include \
	-I/root/.node-gyp/8.11.4/deps/v8/include \
	-I/usr/include/python2.7 \
	-I$(srcdir)/crypto \
	-I$(srcdir)/sha3 \
	-I$(srcdir)/../nan

OBJS := \
	$(obj).target/$(TARGET)/multihashing.o \
	$(obj).target/$(TARGET)/a5a.o \
	$(obj).target/$(TARGET)/aergo.o \
	$(obj).target/$(TARGET)/allium.o \
	$(obj).target/$(TARGET)/blake.o \
	$(obj).target/$(TARGET)/blake2b.o \
	$(obj).target/$(TARGET)/blake2s.o \
	$(obj).target/$(TARGET)/blakecoin.o \
	$(obj).target/$(TARGET)/balloon.o \
	$(obj).target/$(TARGET)/bastion.o \
	$(obj).target/$(TARGET)/biblepay.o \
	$(obj).target/$(TARGET)/bcrypt.o \
	$(obj).target/$(TARGET)/boolberry.o \
	$(obj).target/$(TARGET)/curvehash.o \
	$(obj).target/$(TARGET)/cosa.o \
	$(obj).target/$(TARGET)/c11.o \
	$(obj).target/$(TARGET)/deep.o \
	$(obj).target/$(TARGET)/drop.o \
	$(obj).target/$(TARGET)/exosis.o \
	$(obj).target/$(TARGET)/fugue.o \
	$(obj).target/$(TARGET)/fresh.o \
	$(obj).target/$(TARGET)/gr.o \
	$(obj).target/$(TARGET)/mike.o \
	$(obj).target/$(TARGET)/gts.o \
	$(obj).target/$(TARGET)/geek.o \
	$(obj).target/$(TARGET)/groestl.o \
	$(obj).target/$(TARGET)/hex.o \
	$(obj).target/$(TARGET)/hefty1.o \
	$(obj).target/$(TARGET)/heavyhash.o \
	$(obj).target/$(TARGET)/heavyhash/keccak_tiny.o \
	$(obj).target/$(TARGET)/hmq1725.o \
	$(obj).target/$(TARGET)/honeycomb.o \
	$(obj).target/$(TARGET)/honeycombmodule.o \
	$(obj).target/$(TARGET)/jad8.o \
	$(obj).target/$(TARGET)/keccak.o \
	$(obj).target/$(TARGET)/keccakc.o \
	$(obj).target/$(TARGET)/lbry.o \
	$(obj).target/$(TARGET)/Sponge.o \
	$(obj).target/$(TARGET)/Lyra2.o \
	$(obj).target/$(TARGET)/lyra2h.o \
	$(obj).target/$(TARGET)/lyra2z.o \
	$(obj).target/$(TARGET)/Lyra2-z.o \
	$(obj).target/$(TARGET)/lyra2re.o \
	$(obj).target/$(TARGET)/lyra2rev2.o \
	$(obj).target/$(TARGET)/lyra2rev3.o \
	$(obj).target/$(TARGET)/lyra2z330.o \
	$(obj).target/$(TARGET)/lyra2z16m330.o \
	$(obj).target/$(TARGET)/m7m.o \
	$(obj).target/$(TARGET)/megabtx.o \
	$(obj).target/$(TARGET)/magimath.o \
	$(obj).target/$(TARGET)/minotaur.o \
	$(obj).target/$(TARGET)/nist5.o \
	$(obj).target/$(TARGET)/nist7.o \
	$(obj).target/$(TARGET)/neoscrypt.o \
	$(obj).target/$(TARGET)/phi2.o \
	$(obj).target/$(TARGET)/phichox.o \
	$(obj).target/$(TARGET)/phi1612.o \
	$(obj).target/$(TARGET)/polytimos.o \
	$(obj).target/$(TARGET)/pentablake.o \
	$(obj).target/$(TARGET)/quark.o \
	$(obj).target/$(TARGET)/qubit.o \
	$(obj).target/$(TARGET)/renesis.o \
	$(obj).target/$(TARGET)/sha256d.o \
	$(obj).target/$(TARGET)/sha256q.o \
	$(obj).target/$(TARGET)/sha256t.o \
	$(obj).target/$(TARGET)/shavite3.o \
	$(obj).target/$(TARGET)/sm3.o \
	$(obj).target/$(TARGET)/sha1.o \
	$(obj).target/$(TARGET)/sib.o \
	$(obj).target/$(TARGET)/skein2.o \
	$(obj).target/$(TARGET)/sonoa.o \
	$(obj).target/$(TARGET)/scryptjane.o \
	$(obj).target/$(TARGET)/scryptn.o \
	$(obj).target/$(TARGET)/skein.o \
	$(obj).target/$(TARGET)/skydoge.o \
	$(obj).target/$(TARGET)/timetravel10.o \
	$(obj).target/$(TARGET)/timetravel.o \
	$(obj).target/$(TARGET)/thriddle.o \
	$(obj).target/$(TARGET)/tribus.o \
	$(obj).target/$(TARGET)/veltor.o \
	$(obj).target/$(TARGET)/velvet.o \
	$(obj).target/$(TARGET)/x11evo.o \
	$(obj).target/$(TARGET)/x11ghost.o \
	$(obj).target/$(TARGET)/x11.o \
	$(obj).target/$(TARGET)/x12.o \
	$(obj).target/$(TARGET)/x13.o \
	$(obj).target/$(TARGET)/x14.o \
	$(obj).target/$(TARGET)/x14bcd.o \
	$(obj).target/$(TARGET)/x15.o \
	$(obj).target/$(TARGET)/x16r.o \
	$(obj).target/$(TARGET)/x16rt.o \
	$(obj).target/$(TARGET)/x16rt_module.o \
	$(obj).target/$(TARGET)/x16rv2.o \
	$(obj).target/$(TARGET)/x16s.o \
	$(obj).target/$(TARGET)/x17.o \
	$(obj).target/$(TARGET)/x20r.o \
	$(obj).target/$(TARGET)/x21s.o \
	$(obj).target/$(TARGET)/x22i.o \
	$(obj).target/$(TARGET)/x25x.o \
	$(obj).target/$(TARGET)/xevan.o \
	$(obj).target/$(TARGET)/zr5.o \
	$(obj).target/$(TARGET)/argon2/argon2.o \
	$(obj).target/$(TARGET)/argon2/best.o \
	$(obj).target/$(TARGET)/argon2/blake2b.o \
	$(obj).target/$(TARGET)/argon2/core.o \
	$(obj).target/$(TARGET)/argon2/encoding.o \
	$(obj).target/$(TARGET)/argon2/thread.o \
	$(obj).target/$(TARGET)/crypto/oaes_lib.o \
	$(obj).target/$(TARGET)/crypto/c_keccak.o \
	$(obj).target/$(TARGET)/crypto/c_groestl.o \
	$(obj).target/$(TARGET)/crypto/c_blake256.o \
	$(obj).target/$(TARGET)/crypto/c_jh.o \
	$(obj).target/$(TARGET)/crypto/c_skein.o \
	$(obj).target/$(TARGET)/crypto/hash.o \
	$(obj).target/$(TARGET)/crypto/aesb.o \
	$(obj).target/$(TARGET)/crypto/wild_keccak.o \
	$(obj).target/$(TARGET)/cryptonote/cryptonight_dark.o \
	$(obj).target/$(TARGET)/cryptonote/cryptonight_dark_lite.o \
	$(obj).target/$(TARGET)/cryptonote/cryptonight_fast.o \
	$(obj).target/$(TARGET)/cryptonote/cryptonight.o \
	$(obj).target/$(TARGET)/cryptonote/cryptonight_lite.o \
	$(obj).target/$(TARGET)/cryptonote/cryptonight_soft_shell.o \
	$(obj).target/$(TARGET)/cryptonote/cryptonight_turtle.o \
	$(obj).target/$(TARGET)/cryptonote/cryptonight_turtle_lite.o \
	$(obj).target/$(TARGET)/honeycomb/facet_one.o \
	$(obj).target/$(TARGET)/honeycomb/facet_two.o \
	$(obj).target/$(TARGET)/honeycomb/facet_three.o \
	$(obj).target/$(TARGET)/honeycomb/facet_four.o \
	$(obj).target/$(TARGET)/honeycomb/facet_five.o \
	$(obj).target/$(TARGET)/honeycomb/facet_six.o \
	$(obj).target/$(TARGET)/sha3/sph_hefty1.o \
	$(obj).target/$(TARGET)/sha3/extra.o \
	$(obj).target/$(TARGET)/sha3/sph_fugue.o \
	$(obj).target/$(TARGET)/sha3/aes_helper.o \
	$(obj).target/$(TARGET)/sha3/sph_blake.o \
	$(obj).target/$(TARGET)/sha3/sph_bmw.o \
	$(obj).target/$(TARGET)/sha3/sph_cubehash.o \
	$(obj).target/$(TARGET)/sha3/sph_echo.o \
	$(obj).target/$(TARGET)/sha3/sph_groestl.o \
	$(obj).target/$(TARGET)/sha3/sph_jh.o \
	$(obj).target/$(TARGET)/sha3/sph_keccak.o \
	$(obj).target/$(TARGET)/sha3/sph_luffa.o \
	$(obj).target/$(TARGET)/sha3/sph_shavite.o \
	$(obj).target/$(TARGET)/sha3/sph_simd.o \
	$(obj).target/$(TARGET)/sha3/sph_skein.o \
	$(obj).target/$(TARGET)/sha3/sph_whirlpool.o \
	$(obj).target/$(TARGET)/sha3/sph_shabal.o \
	$(obj).target/$(TARGET)/sha3/sph_ripemd.o \
	$(obj).target/$(TARGET)/sha3/sph_sha2.o \
	$(obj).target/$(TARGET)/sha3/sph_sha2big.o \
	$(obj).target/$(TARGET)/sha3/sph_hamsi.o \
	$(obj).target/$(TARGET)/sha3/sph_hamsi_helper.o \
	$(obj).target/$(TARGET)/sha3/sph_haval.o \
	$(obj).target/$(TARGET)/sha3/sph_tiger.o \
	$(obj).target/$(TARGET)/sha3/sph_gost.o \
	$(obj).target/$(TARGET)/sha3/sph_panama.o \
	$(obj).target/$(TARGET)/sha3/sph_blake2s.o \
	$(obj).target/$(TARGET)/sha3/lane.o \
	$(obj).target/$(TARGET)/SWIFFTX/SWIFFTX.o \
	$(obj).target/$(TARGET)/yespower-1.0.1/yespower_sugarchain.o \
	$(obj).target/$(TARGET)/yespower/yespower-opt.o \
	$(obj).target/$(TARGET)/yespower/yespower.o \
	$(obj).target/$(TARGET)/yescrypt/sha256_Y.o \
	$(obj).target/$(TARGET)/yescrypt/yescrypt-best.o \
	$(obj).target/$(TARGET)/yescrypt/yescryptcommon.o \
	$(obj).target/$(TARGET)/yescrypt-0.5/yescrypt.o

# Add to the list of files we specially track dependencies for.
all_deps += $(OBJS)

# CFLAGS et al overrides must be target-local.
# See "Target-specific Variable Values" in the GNU Make manual.
$(OBJS): TOOLSET := $(TOOLSET)
$(OBJS): GYP_CFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE))
$(OBJS): GYP_CXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE))

# Suffix rules, putting all outputs into $(obj).

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.cc FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# Try building from generated source, too.

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.cc FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.cc FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# End of this set of suffix rules
### Rules for final target.
LDFLAGS_Debug := \
	-pthread \
	-rdynamic \
	-m64

LDFLAGS_Release := \
	-pthread \
	-rdynamic \
	-m64

LIBS :=

$(obj).target/multihashing.node: GYP_LDFLAGS := $(LDFLAGS_$(BUILDTYPE))
$(obj).target/multihashing.node: LIBS := $(LIBS)
$(obj).target/multihashing.node: TOOLSET := $(TOOLSET)
$(obj).target/multihashing.node: $(OBJS) FORCE_DO_CMD
	$(call do_cmd,solink_module)

all_deps += $(obj).target/multihashing.node
# Add target alias
.PHONY: multihashing
multihashing: $(builddir)/multihashing.node

# Copy this to the executable output path.
$(builddir)/multihashing.node: TOOLSET := $(TOOLSET)
$(builddir)/multihashing.node: $(obj).target/multihashing.node FORCE_DO_CMD
	$(call do_cmd,copy)

all_deps += $(builddir)/multihashing.node
# Short alias for building this executable.
.PHONY: multihashing.node
multihashing.node: $(obj).target/multihashing.node $(builddir)/multihashing.node

# Add executable to "all" target.
.PHONY: all
all: $(builddir)/multihashing.node

